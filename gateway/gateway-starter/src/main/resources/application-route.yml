# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# #### IAM gateway routes configuration. ####
#
spring:
  cloud:
    ## see:org.springframework.cloud.gateway.config.GatewayAutoConfiguration
    ## see:org.springframework.cloud.gateway.config.GatewayProperties
    ## see:https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.0.0.RELEASE/single/spring-cloud-gateway.html#_requestratelimiter_gatewayfilter_factory
    ## see:https://github.com/eugenp/tutorials/blob/master/spring-cloud/spring-cloud-gateway/src/main/resources/application-webfilters.yml
    ## see:https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/appendix.html
    gateway:
      routes:
        - id: v2-energy-openapi-service
          uri: lb://v2-energy-openapi-service ## E.g: http://openapi.example-internal.com
          predicates:
            - Path=/openapi/v2/**,/v2/**
            #- Weight=v2-energy-openapi-service,5
          filters:
            ## see: org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory#apply
            #- RewritePath=/openapi/v2/(?<segment>.*), /openapi/v2/$\{segment}
            #- StripPrefix=1
            - name: SimpleSignAuthing
              args:
                ## Note: In some special business platform scenarios, the signature authentication protocol may not define
                ## appId (such as Alibaba Cloud Market SaaS product authentication API), then the uniqueness of the client
                ## application can only be determined according to the request route ID.
                app-id-extractor: Parameter ## Default by 'Parameter', Options(Parameter|RouteId)
                # Only valid when appId extract mode is parameter.
                app-id-param: appId ## Default by 'appId'
                #secret-param: appSecret ## Default by 'appSecret'
                sign-replay-verify-enabled: true ## Default by true
                sign-replay-verify-bloom-expire-seconds: 604800 ## Default by 7*24*60*60
                sign-param: signature ## Default by 'sign'
                sign-algorithm: S256 ## Default by 'S256', Options(MD5|S1|S256|S384|S512|HMD5|HS1|HS256|HS512)
                sign-hashing-mode: SimpleParamsBytesSortedHashing ## Default by 'UriParamsKeySortedHashing'
                sign-hashing-include-params: [appId, timestamp, nonce] ## Default by []
                sign-hashing-exclude-params: ['response_type','__iscg_log'] ## Default by []
                sign-hashing-required-include-params: [appId, timestamp, nonce] ## Default by []
                add-sign-auth-client-id-header: X-Sign-Auth-AppId ## Default by 'X-Sign-Auth-AppId'
            - name: RequestSize
              args:
                max-size: 10485760 ## Default by 5MB
            ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory#apply()
            ## see:org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter#isAllowed()
            ## see:https://blog.csdn.net/songhaifengshuaige/article/details/93372437
            - name: RequestRateLimiter
              args: ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory.Config
                redis-rate-limiter:
                  ## The capacity of the token bucket, the maximum number of requests allowed to complete in one second.
                  burst-capacity: 10
                  ## The average rate of token bucket filling per second, which is equivalent to the average number of 
                  ## requests per second that users are allowed to process.
                  replenish-rate: 10
                key-resolver: '#{@hostKeyResolver}'
                status-code: TOO_MANY_REQUESTS
                #empty-key-status: ## Default are set(recommended).
            ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory#apply()
            ## see:org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter#isAllowed()
            ## see:https://blog.csdn.net/songhaifengshuaige/article/details/93372437
            - name: RequestRateLimiter
              args: ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory.Config
                redis-rate-limiter:
                  burst-capacity: 10
                  replenish-rate: 10
                ## see:com.wl4g.iam.gateway.auth.simple.SimpleSignAuthingFilter.bindSignedToContext()
                ## see:org.springframework.cloud.gateway.filter.ratelimit.PrincipalNameKeyResolver#resolve()
                ## Note:When the interception takes effect, 403 is returned by default?
                key-resolver: '#{@principalNameKeyResolver}'
                status-code: TOO_MANY_REQUESTS
                #empty-key-status: ## Default are set(recommended).
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET,POST
                backoff:
                  first-backoff: 30ms
                  max-backoff: 80ms
                  factor: 2
                  based-on-previous-value: false
            - name: CircuitBreaker
              args:
                name: defaultCircuitBreaker
                fallback-uri: forward:/fallback
                statusCodes:
                  - 500
                  - "NOT_FOUND"
        - id: v1-alimarket-openapi-service
          uri: lb://v1-alimarket-openapi-service
          predicates:
            - Path=/alimarket/v1/**
          filters:
            ## see: org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory#apply
            - RewritePath=/alimarket/v1/(?<segment>.*),/openapi/alimarket/v1/$\{segment}
            - name: SimpleSignAuthing
              args:
                ## Note: In some special business platform scenarios, the signature authentication protocol may not define
                ## appId (such as Alibaba Cloud Market SaaS product authentication API), then the uniqueness of the client
                ## application can only be determined according to the request route ID.
                app-id-extractor: RouteId ## Default by 'Parameter', Options(Parameter|RouteId)
                ## Only valid when appId extract mode is parameter.
                app-id-param: appId
                secret-param: key ## Default by 'appSecret'
                sign-replay-verify-enabled: false ## Default by true
                sign-replay-verify-bloom-expire-seconds: 604800 ## Default by 7*24*60*60
                sign-param: token ## Default by 'sign'
                sign-algorithm: MD5 ## Default by 'S256', Options(MD5|S1|S256|S384|S512|HMD5|HS1|HS256|HS512)
                sign-hashing-mode: UriParamsKeySortedHashing ## Default by 'UriParamsKeySortedHashing'
                sign-hashing-include-params: ['*'] ## Default by []
                sign-hashing-exclude-params: ['response_type','__iscg_log'] ## Default by []
                add-sign-auth-client-id-header: X-Sign-Auth-AppId ## Default by 'X-Sign-Auth-AppId'
            - name: RequestSize
              args:
                max-size: 10485760 ## Default by 5MB
            ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory#apply()
            ## see:org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter#isAllowed()
            ## see:https://blog.csdn.net/songhaifengshuaige/article/details/93372437
            - name: RequestRateLimiter
              args: ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory.Config
                redis-rate-limiter:
                  ## The capacity of the token bucket, the maximum number of requests allowed to complete in one second.
                  burst-capacity: 10
                  ## The average rate of token bucket filling per second, which is equivalent to the average number of 
                  ## requests per second that users are allowed to process.
                  replenish-rate: 10
                key-resolver: '#{@hostKeyResolver}'
                status-code: TOO_MANY_REQUESTS
                #empty-key-status: ## Default are set(recommended).
            ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory#apply()
            ## see:org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter#isAllowed()
            ## see:https://blog.csdn.net/songhaifengshuaige/article/details/93372437
            - name: RequestRateLimiter
              args: ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory.Config
                redis-rate-limiter:
                  burst-capacity: 10
                  replenish-rate: 10
                ## see:com.wl4g.iam.gateway.auth.simple.SimpleSignAuthingFilter.bindSignedToContext()
                ## see:org.springframework.cloud.gateway.filter.ratelimit.PrincipalNameKeyResolver#resolve()
                ## Note:When the interception takes effect, 403 is returned by default?
                key-resolver: '#{@principalNameKeyResolver}'
                status-code: TOO_MANY_REQUESTS
                #empty-key-status: ## Default are set(recommended).
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
                methods: GET,POST
                backoff:
                  first-backoff: 30ms
                  max-backoff: 80ms
                  factor: 2
                  based-on-previous-value: false
            - name: CircuitBreaker
              args:
                name: defaultCircuitBreaker
                fallback-uri: forward:/fallback
                statusCodes:
                  - 500
                  - "NOT_FOUND"
        #- id: portal
        #  uri: https://www.httpbin.org/
        #  predicates:
        #    - Path=/**
        #  filters:
        #    #- TokenRelay
        #    - TokenRelayRefresh
        #    - RemoveRequestHeader=Cookie, Set-Cookie
