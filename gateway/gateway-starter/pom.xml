<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>dopaas-iam-gateway-starter</artifactId>
	<packaging>jar</packaging>
	<name>DoPaaS IAM Gateway Starter</name>
	<url>http://iam.dopaas.wl4g.com</url>
	<parent>
		<groupId>com.wl4g</groupId>
		<artifactId>dopaas-iam-gateway</artifactId>
		<version>3.0.0</version>
	</parent>
	<properties>
		<java.version>1.8</java.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<final.name>iam-gateway</final.name>
		<bootstrap-classname>com.wl4g.IamGateway</bootstrap-classname>
		<opentelemetry.version>1.1.0</opentelemetry.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>dopaas-iam-bom</artifactId>
				<version>${project.parent.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Tracing -->
			<dependency>
				<groupId>io.opentelemetry</groupId>
				<artifactId>opentelemetry-bom</artifactId>
				<version>${opentelemetry.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Trying upgrade spring-cloud-gateway-3.1.1 -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.cloud</groupId> -->
			<!-- <artifactId>spring-cloud-starter-gateway</artifactId> -->
			<!-- <version>${spring-cloud-gateway.version}</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.cloud</groupId> -->
			<!-- <artifactId>spring-cloud-gateway-server</artifactId> -->
			<!-- <version>${spring-cloud-gateway.version}</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-starter-webflux</artifactId> -->
			<!-- <version>2.6.3</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-starter-reactor-netty</artifactId> -->
			<!-- <version>2.6.3</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>io.projectreactor.addons</groupId> -->
			<!-- <artifactId>reactor-extra</artifactId> -->
			<!-- <version>3.4.6</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>io.projectreactor</groupId> -->
			<!-- <artifactId>reactor-core</artifactId> -->
			<!-- <version>3.4.13</version> -->
			<!-- </dependency> -->
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>dopaas-iam-common</artifactId>
			<exclusions>
				<!-- Must excludes web-mvc -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>dopaas-shell-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>dopaas-shell-springboot</artifactId>
		</dependency>
		<!-- Core Foundation -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>
		<!-- see:io.netty.handler.ssl.SslContext#defaultProvider -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-tcnative-boringssl-static</artifactId>
		</dependency>
		<!-- Redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- Spring Security -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-security</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.security</groupId> -->
		<!-- <artifactId>spring-security-oauth2-client</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.security</groupId> -->
		<!-- <artifactId>spring-security-oauth2-jose</artifactId> -->
		<!-- </dependency> -->
		<!-- Admin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Trace -->
		<!-- Webflux bridge for servlet filter -->
		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>javax.servlet-api</artifactId> -->
		<!-- </dependency> -->
		<!-- Tracing -->
		<!-- <dependency> -->
		<!-- <groupId>io.opentelemetry</groupId> -->
		<!-- <artifactId>opentelemetry-api</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.opentelemetry</groupId> -->
		<!-- <artifactId>opentelemetry-sdk</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.opentelemetry</groupId> -->
		<!-- <artifactId>opentelemetry-exporter-otlp</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.opentelemetry</groupId> -->
		<!-- <artifactId>opentelemetry-exporter-zipkin</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.opentelemetry</groupId> -->
		<!-- <artifactId>opentelemetry-semconv</artifactId> -->
		<!-- <version>1.1.0-alpha</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.grpc</groupId> -->
		<!-- <artifactId>grpc-protobuf</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>io.grpc</groupId> -->
		<!-- <artifactId>grpc-netty-shaded</artifactId> -->
		<!-- </dependency> -->
		<!-- Metrics -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- see:https://cloud.spring.io/spring-cloud-circuitbreaker/reference/html/spring-cloud-circuitbreaker.html#collecting-metrics -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-micrometer</artifactId>
		</dependency>
		<!-- Loadbalancer -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>
		<!-- Circuitbreaker -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<!-- Netflix -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-hystrix</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-ribbon</artifactId> -->
		<!-- </dependency> -->
		<!-- Nacos -->
		<!-- <dependency> -->
		<!-- <groupId>com.alibaba.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.alibaba.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> -->
		<!-- </dependency> -->
		<!-- Tests -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- The test engine used in JUnit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- The test engine used in JUnit 4 -->
		<!-- <dependency> -->
		<!-- <groupId>org.junit.vintage</groupId> -->
		<!-- <artifactId>junit-vintage-engine</artifactId> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${final.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- When true and will check file encoding, causes the picture file copy to fail. -->
				<filtering>false</filtering>
				<excludes>
					<exclude>cert.d/**</exclude>
					<exclude>script/**</exclude>
					<exclude>default-webapps/**</exclude>
					<exclude>static/**</exclude>
					<exclude>*.*</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<!-- issue:https://stackoverflow.com/questions/64699000/javabeanexecutable-hv000254-missing-parameter-metadata-for-java-enum -->
					<parameters>true</parameters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<configLocation>/../checkstyle/google_checks.xml</configLocation>
				</configuration>
				<executions>
					<!-- Solutions to maven checkstyle errors in Eclipse: https://gitee.com/wl4g/dopaas-blogs/blob/master/articles/maven.checkstyle-eclipse-error/README_CN.md -->
					<!-- <execution> -->
					<!-- <id>checkstyle</id> -->
					<!-- <phase>validate</phase> -->
					<!-- <goals> -->
					<!-- <goal>check</goal> -->
					<!-- </goals> -->
					<!-- <configuration> -->
					<!-- <failOnViolation>true</failOnViolation> -->
					<!-- </configuration> -->
					<!-- </execution> -->
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>mvnAssTar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>springExecJar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<mainClass>${bootstrap-classname}</mainClass>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<!-- for using: java -cp myapp.jar -Dloader.main=com.MyApp org.springframework.boot.loader.PropertiesLauncher -->
							<!-- @see:https://www.baeldung.com/spring-boot-main-class -->
							<!-- @see:https://www.jianshu.com/p/66a101c85485 -->
							<layout>ZIP</layout>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker:build:mvnAssTar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Usages: -->
					<!-- [build]: mvn -Pdocker:build:mvnAssTar -->
					<!-- [push]: mvn -Pdocker:build:mvnAssTar -->
					<!-- [push]: mvn -Pdocker:build:mvnAssTar dockerfile:build dockerfile:push -Ddockerfile.username=wl4g -Ddockerfile.password=123456 -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<!-- <goal>push</goal> -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<contextDirectory>${project.basedir}</contextDirectory>
							<repository>wl4g/${project.build.finalName}</repository>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<tag>${project.version}</tag>
							<readTimeoutMillis>60000</readTimeoutMillis>
							<connectTimeoutMillis>20000</connectTimeoutMillis>
							<buildArgs>
								<APP_NAME>${project.build.finalName}</APP_NAME>
								<APP_VERSION>${project.version}</APP_VERSION>
								<APP_MAINCLASS>${bootstrap-classname}</APP_MAINCLASS>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<additionalOptions>-Xdoclint:none</additionalOptions> <!-- 3.0.0+ -->
									<!-- <additionalparam>-Xdoclint:none</additionalparam> --> <!-- 2.0.0 -->
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- GPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<serverId>sonatype-nexus-staging</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
							<stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>sonatype-nexus-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>sonatype-nexus-staging</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>
</project>