# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# #### Environment(SpringCloud Feign for Uat) configuration. ####
# see: https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.2.2.RELEASE/reference/html

spring:
  cloud:
    circuitbreaker:
      hystrix:
        enabled: true # Default by true
    loadbalancer:
      retry:
        enabled: true
    #ipAddress: 
#    consul:
#      discovery:
#        enabled: true
#        register: true
#        prefer-ip-address: true # Solve the problem that the health check will fail in the consumer under docker
#        service-name: ${spring.application.name}
#        hostname: localhost
#        port: ${server.port} # Port of registration service
#        healthCheckPath: /actuator/health
#        healthCheckInterval: 10s

management:
  metrics:
    binders:
      hystrix:
        enabled: true # Default by true
  endpoint:
    hystrix:
      stream:
        enabled: true # Default by true

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    prefer-ip-address: true
    #instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
  # see:https://github.com/Netflix/eureka/blob/master/eureka-client/src/main/java/com/netflix/discovery/EurekaClientConfig.java
  client:
    registerWithEureka: true # Default by true
    fetchRegistry: false # Default by false
    registryFetchIntervalSeconds: 30 # Default by 30
    gzipContent: true # Default by true
    eurekaConnectionIdleTimeoutSeconds: 30 # Default by true
    eurekaServerConnectTimeoutSeconds: 5 # Default by 5
    eurekaServerReadTimeoutSeconds: 8 # Default by 8
    eurekaServerTotalConnections: 200 # Default by 200(total max clients)
    eurekaServerTotalConnectionsPerHost: 50 # Default by 50(max clients)
    eurekaServiceUrlPollIntervalSeconds: 300 # Default by 300
    initialInstanceInfoReplicationIntervalSeconds: 40 # Default by 40
    instanceInfoReplicationIntervalSeconds: 30 # Default by 30

# see: spring-cloud-netflix-hystrix-2.2.6.RELEASE.jar!/META-INF/spring-configuration-metadata.json
hystrix:
  shareSecurityContext: false # Default by false
  metrics:
    polling-interval-ms: 2000 # 2000ms
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE # SEMAPHORE|THREAD
          thread:
            # Official recommendation: ribbon retries * (ribbon.readTimeout + ribbon.connectTimeout)
            # see: https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.2.2.RELEASE/reference/html/#hystrix-timeouts-and-ribbon-clients
            timeoutInMilliseconds: 20_000 # Default by 1000ms

# see: https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.2.2.RELEASE/reference/html/#example-disable-eureka-use-in-ribbon
# see: https://github.com/Netflix/ribbon/wiki/Working-with-load-balancers#components-of-load-balancer
ribbon:
  eureka:
    enabled: true # Default by true
  connectTimeout: 3000
  readTimeout: 6000
  okToRetryOnAllOperations: true # Try again for all operations
  maxAutoRetriesNextServer: 2 # Number of retries for different instances of the same service
  maxAutoRetries: 1 # Same instance retries

feign:
  hystrix:
    enabled: true
